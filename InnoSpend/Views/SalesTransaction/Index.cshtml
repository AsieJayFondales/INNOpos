<!--version 11-->

@using InnoSpend.Models
@using System.Linq
@model SalesTransactionModel
@{
    ViewData["Title"] = "New Sale";

    // Debug information to check what's in ViewBag.Products
    var productsDebug = ViewBag.Products;
    var productsCount = productsDebug != null ? (productsDebug is IEnumerable<object> ? ((IEnumerable<object>)productsDebug).Count() : 0) : 0;

    // Fix for nullable reference warnings
    var firstProduct = productsDebug switch
    {
        IEnumerable<object> products when products.Any() => products.First()?.ToString() ?? "none",
        _ => "none"
    };
}

<div class="pos-container">
    <!-- Debug information -->
    <div class="debug-info" style="position: fixed; top: 10px; right: 10px; background: rgba(0,0,0,0.8); padding: 10px; z-index: 9999; border-radius: 5px;">
        <p>Products in ViewBag: @productsCount</p>
        <p>Products Type: @(productsDebug?.GetType().FullName ?? "null")</p>
        <p>First Product: @firstProduct</p>
    </div>

    <!-- Left Side - Products -->
    <div class="pos-products">
        <!-- Categories -->
        <div class="category-tabs mb-3">
            <button class="category-tab active">All Items</button>
            <!-- Simplified category handling -->
            @{
                var categories = new List<string>();
                if (ViewBag.Products != null)
                {
                    foreach (var product in ViewBag.Products)
                    {
                        if (product.Category != null && !categories.Contains(product.Category))
                        {
                            categories.Add(product.Category);
                        }
                    }
                }
            }

            @foreach (var category in categories)
            {
                <button class="category-tab">@category</button>
            }
        </div>

        <!-- Products Grid -->
        <div class="products-grid">
            @if (ViewBag.Products != null)
            {
                foreach (var productDto in ViewBag.Products) // productDto, umayos ka
                {
                    <div class="product-item"
                         data-id="@productDto.Id"
                         data-price="@productDto.Price"
                         data-name="@productDto.Name"
                         data-category="@(productDto.Category ?? "Uncategorized")">
                        <div class="product-content">
                            <h3>@productDto.Name</h3>
                            <p class="price">₱@productDto.Price.ToString("F2")</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-warning">
                    No products available. Please check your product inventory.
                </div>
            }
        </div>
    </div>

    <!-- Right Side - Cart & Payment -->
    <div class="pos-cart">
        <form asp-action="NewSale" method="post" id="saleForm">
            <!-- Hidden inputs for form submission -->
            <input type="hidden" asp-for="ProductId" id="selectedProduct" />
            <input type="hidden" asp-for="Quantity" id="quantity" value="1" />
            <input type="hidden" asp-for="UnitPrice" id="unitPrice" />
            <input type="hidden" asp-for="PaymentMethod" id="paymentMethod" value="Cash" />

            <!-- Cart Header -->
            <div class="cart-header">
                <h2>Current Sale</h2>
                <button type="button" id="clearCart" class="btn-clear">
                    <i class="fas fa-trash-alt"></i>
                </button>
            </div>

            <!-- Cart Items -->
            <div class="cart-items" id="cartItems">
                <div class="empty-cart">
                    <i class="fas fa-shopping-cart"></i>
                    <p>No items in cart</p>
                </div>
            </div>

            <!-- Customer Selection -->
            <div class="cart-section">
                <label>Customer</label>
                <select asp-for="CustomerCode" class="form-control">
                    <option value="0">Walk-in Customer</option>
                    @foreach (var customer in ViewBag.Customers)
                    {
                        <option value="@customer.CustomerCode">@customer.Firstname @customer.Lastname</option>
                    }
                </select>
            </div>

            <!-- Cart Summary -->
            <div class="cart-summary">
                <div class="summary-row">
                    <span>Subtotal</span>
                    <span id="totalBeforeDiscount">₱0.00</span>
                </div>
                <div class="summary-row">
                    <span>Discount</span>
                    <div class="discount-input">
                        <input asp-for="Discount" class="form-control" id="discount" value="0" />
                    </div>
                </div>
                <div class="summary-row total">
                    <span>Total</span>
                    <span id="totalAfterDiscount">₱0.00</span>
                </div>
            </div>

            <!-- Payment Methods -->
            <div class="payment-methods">
                <div class="payment-method active" data-method="Cash">
                    <i class="fas fa-money-bill-wave"></i>
                    <span>Cash</span>
                </div>
                <div class="payment-method" data-method="Credit Card">
                    <i class="fas fa-credit-card"></i>
                    <span>Credit Card</span>
                </div>
                <div class="payment-method" data-method="GCash">
                    <i class="fas fa-mobile-alt"></i>
                    <span>GCash</span>
                </div>
                <div class="payment-method" data-method="Maya">
                    <i class="fas fa-qrcode"></i>
                    <span>Maya</span>
                </div>
            </div>

            <!-- Complete Sale Button -->
            <button type="submit" class="btn-complete-sale">
                <i class="fas fa-check-circle"></i>
                Complete Sale
            </button>
        </form>
    </div>
</div>

<style>
    .pos-container {
        display: flex;
        height: calc(100vh - 60px);
        background: #1a1a1a;
        color: #fff;
        overflow: hidden;
    }

    /* Products Section */
    .pos-products {
        flex: 1;
        padding: 1rem;
        overflow-y: auto;
    }

    .category-tabs {
        display: flex;
        gap: 0.5rem;
        overflow-x: auto;
        padding-bottom: 0.5rem;
    }

    .category-tab {
        background: #2d2d2d;
        color: #fff;
        border: 1px solid #3a3a3a;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        cursor: pointer;
        white-space: nowrap;
        transition: all 0.3s ease;
    }

        .category-tab.active {
            background: #0066ff;
            border-color: #0066ff;
        }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 1rem;
        padding: 1rem 0;
    }

    .product-item {
        background: #2d2d2d;
        border: 1px solid #3a3a3a;
        border-radius: 0.5rem;
        cursor: pointer;
        transition: all 0.3s ease;
        aspect-ratio: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        padding: 1rem;
    }

        .product-item:hover {
            border-color: #0066ff;
            box-shadow: 0 0 10px rgba(0, 102, 255, 0.3);
            transform: translateY(-2px);
        }

    .product-content h3 {
        font-size: 0.9rem;
        margin: 0 0 0.5rem 0;
    }

    .product-content .price {
        color: #0066ff;
        font-weight: bold;
        margin: 0;
    }

    /* Cart Section */
    .pos-cart {
        width: 400px;
        background: #2d2d2d;
        border-left: 1px solid #3a3a3a;
        display: flex;
        flex-direction: column;
    }

    .cart-header {
        padding: 1rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: 1px solid #3a3a3a;
    }

    .btn-clear {
        background: none;
        border: none;
        color: #ff4444;
        cursor: pointer;
    }

    .cart-items {
        flex: 1;
        overflow-y: auto;
        padding: 1rem;
    }

    .empty-cart {
        text-align: center;
        color: #666;
        padding: 2rem;
    }

        .empty-cart i {
            font-size: 2rem;
            margin-bottom: 1rem;
        }

    .cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.5rem;
        border-bottom: 1px solid #3a3a3a;
    }

    .cart-item-details h4 {
        margin: 0;
        font-size: 0.9rem;
    }

    .cart-item-details p {
        margin: 0;
        font-size: 0.8rem;
        color: #888;
    }

    .cart-section {
        padding: 1rem;
        border-bottom: 1px solid #3a3a3a;
    }

        .cart-section label {
            display: block;
            margin-bottom: 0.5rem;
        }

    .cart-summary {
        padding: 1rem;
        border-bottom: 1px solid #3a3a3a;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }

        .summary-row.total {
            font-size: 1.2rem;
            font-weight: bold;
            color: #0066ff;
        }

    .discount-input {
        width: 100px;
    }

    .payment-methods {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 0.5rem;
        padding: 1rem;
    }

    .payment-method {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 1rem;
        background: #222;
        border: 1px solid #3a3a3a;
        border-radius: 0.5rem;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .payment-method.active {
            background: #0066ff;
            border-color: #0066ff;
        }

        .payment-method i {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }

    .btn-complete-sale {
        margin: 1rem;
        padding: 1rem;
        background: #00cc66;
        color: white;
        border: none;
        border-radius: 0.5rem;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        font-size: 1.1rem;
    }

        .btn-complete-sale:hover {
            background: #00b359;
        }

    /* Form Controls */
    .form-control {
        background: #222;
        border: 1px solid #3a3a3a;
        color: #fff;
        padding: 0.5rem;
        border-radius: 0.25rem;
        width: 100%;
    }

        .form-control:focus {
            border-color: #0066ff;
            outline: none;
        }

    /* Alert styling */
    .alert {
        padding: 1rem;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }

    .alert-warning {
        background-color: rgba(255, 193, 7, 0.2);
        color: #ffc107;
        border: 1px solid rgba(255, 193, 7, 0.3);
    }
</style>

<script>
    $(document).ready(function() {
        let currentTotal = 0;
        let cartItems = [];

        // Category filter
        $('.category-tab').click(function() {
            $('.category-tab').removeClass('active');
            $(this).addClass('active');

            const category = $(this).text();
            if (category === 'All Items') {
                $('.product-item').show();
            } else {
                $('.product-item').hide();
                $(`.product-item[data-category="${category}"]`).show();
            }
        });

        // Product selection
        $('.product-item').click(function() {
            const productId = $(this).data('id');
            const productName = $(this).data('name');
            const productPrice = $(this).data('price');

            // Add to cart
            addToCart(productId, productName, productPrice);
        });

        // Payment method selection
        $('.payment-method').click(function() {
            $('.payment-method').removeClass('active');
            $(this).addClass('active');
            $('#paymentMethod').val($(this).data('method'));
        });

        // Clear cart
        $('#clearCart').click(function() {
            cartItems = [];
            updateCartDisplay();
        });

        function addToCart(productId, productName, price) {
            const existingItem = cartItems.find(item => item.productId === productId);

            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                cartItems.push({
                    productId: productId,
                    name: productName,
                    price: price,
                    quantity: 1
                });
            }

            updateCartDisplay();
        }

        function updateCartDisplay() {
            const $cartItems = $('#cartItems');

            if (cartItems.length === 0) {
                $cartItems.html(`
                    <div class="empty-cart">
                        <i class="fas fa-shopping-cart"></i>
                        <p>No items in cart</p>
                    </div>
                `);
                currentTotal = 0;
            } else {
                let cartHtml = '';
                currentTotal = 0;

                cartItems.forEach(item => {
                    const itemTotal = item.price * item.quantity;
                    currentTotal += itemTotal;

                    cartHtml += `
                        <div class="cart-item">
                            <div class="cart-item-details">
                                <h4>${item.name}</h4>
                                <p>₱${item.price.toFixed(2)} x ${item.quantity}</p>
                            </div>
                            <div class="cart-item-total">
                                ₱${itemTotal.toFixed(2)}
                            </div>
                        </div>
                    `;
                });

                $cartItems.html(cartHtml);
            }

            // Update form values
            $('#selectedProduct').val(cartItems.length > 0 ? cartItems[0].productId : '');
            $('#quantity').val(cartItems.length > 0 ? cartItems[0].quantity : 1);
            $('#unitPrice').val(cartItems.length > 0 ? cartItems[0].price : 0);

            updateTotals();
        }

        function updateTotals() {
            const discount = parseFloat($('#discount').val()) || 0;
            const totalAfterDiscount = currentTotal - discount;

            $('#totalBeforeDiscount').text('₱' + currentTotal.toFixed(2));
            $('#totalAfterDiscount').text('₱' + totalAfterDiscount.toFixed(2));
        }

        // Listen for discount changes
        $('#discount').on('input', updateTotals);

        // Initialize
        updateCartDisplay();
    });
</script>

